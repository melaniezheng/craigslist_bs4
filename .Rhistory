ifelse(grepl("3 bed|3 Bed|3 br|3BD|3br|3BR|3 BR|3bd",title), "3br",
ifelse(grepl("4 bed|4 Bed|4 br|4BD|4br|4BR|4 BR|4bd",title), "4br",
ifelse(grepl("5 bed|5 Bed|5 br|5BD|5br|5BR|5 BR|5bd",title), "5br",bedrooms))))), bedrooms))
data2 %>% filter(.,bedrooms=="") %>% select(.,title)
data2 %>% filter(.,bedrooms=="", city = "New York") %>% select(.,title)
data2 %>% filter(.,bedrooms=="", city == "New York") %>% select(.,title)
data2 <- data %>%
mutate(.,bedrooms = ifelse(
bedrooms == "",
ifelse(grepl("Studio|STUDIO|One bed|one bed|One Bed|one Bed|1 bed|1 Bed|1 br|1BD|1br|1 bd|1bd|1 BD|1BR|1 BR",title), "1br",
ifelse(grepl("Two bed|two bed|Two Bed|two Bed|2 bed|2 Bed|2 br|2BD|2br|2 BD|2 bd|2BR|2 BR|2bd",title), "2br",
ifelse(grepl("3 bed|3 Bed|3 br|3BD|3br|3BR|3 BR|3bd",title), "3br",
ifelse(grepl("4 bed|4 Bed|4 br|4BD|4br|4BR|4 BR|4bd",title), "4br",
ifelse(grepl("5 bed|5 Bed|5 br|5BD|5br|5BR|5 BR|5bd",title), "5br",bedrooms))))), bedrooms))
nrow(data2 %>% filter(.,bedrooms==""))
data2 %>% filter(.,bedrooms=="", city == "New York") %>% select(.,title)
data2 <- data %>%
mutate(.,bedrooms = ifelse(
bedrooms == "",
ifelse(grepl("Studio|STUDIO|One bed|one bed|One Bed|one Bed|1bed|1 bed|1 Bed|1 br|1BD|1br|1 bd|1bd|1 BD|1BR|1 BR",title), "1br",
ifelse(grepl("Two bed|two bed|Two Bed|two Bed|2bed|2 bed|2 Bed|2 br|2BD|2br|2 BD|2 bd|2BR|2 BR|2bd",title), "2br",
ifelse(grepl("3 bed|3 Bed|3bed|3 br|3BD|3br|3BR|3 BR|3bd",title), "3br",
ifelse(grepl("4 bed|4bed|4 Bed|4 br|4BD|4br|4BR|4 BR|4bd",title), "4br",
ifelse(grepl("5bed|5 bed|5 Bed|5 br|5BD|5br|5BR|5 BR|5bd",title), "5br",bedrooms))))), bedrooms))
nrow(data2 %>% filter(.,bedrooms==""))
data2 %>% filter(.,bedrooms=="", city == "New York") %>% select(.,title)
lower("1BED")
tolower("1BED")
data2 <- data %>%
mutate(.,title = tolower(title), bedrooms = ifelse(
bedrooms == "",
ifelse(grepl("studio||one bed|one bed|1bed|1 bed|1 br|1bd|1br|1 bd|1bd|",title), "1br",
ifelse(grepl("two bed|2bed|2 bed|2 br|2br|2 bd|2bd",title), "2br",
ifelse(grepl("3 bed|3 Bed|3bed|3 br|3BD|3br|3BR|3 BR|3bd|3 BED",title), "3br",
ifelse(grepl("4 bed|4bed|4 Bed|4 br|4BD|4br|4BR|4 BR|4bd|4 BED",title), "4br",
ifelse(grepl("5bed|5 bed|5 Bed|5 br|5BD|5br|5BR|5 BR|5bd|5 BED",title), "5br",bedrooms))))), bedrooms))
data2 <- data %>%
mutate(.,title = tolower(title), bedrooms = ifelse(
bedrooms == "",
ifelse(grepl("studio||one bed|one bed|1bed|1 bed|1 br|1bd|1br|1 bd|1bd|",title), "1br",
ifelse(grepl("two bed|2bed|2 bed|2 br|2br|2 bd|2bd",title), "2br",
ifelse(grepl("3 bed|3bed|3 br|3br|3bd|3 bd",title), "3br",
ifelse(grepl("4 bed|4bed|4 br|4br|4bd",title), "4br",
ifelse(grepl("5bed|5 bed|5 br|5br|5bd",title), "5br",bedrooms))))), bedrooms))
data2 <- data %>%
mutate(.,title = tolower(title), bedrooms = ifelse(
bedrooms == "",
ifelse(grepl("studio||one bed|one bed|1bed|1 bed|1 br|1bd|1br|1 bd|1bd|",title), "1br",
ifelse(grepl("two bed|2bed|2 bed|2 br|2br|2 bd|2bd",title), "2br",
ifelse(grepl("3 bed|3bed|3 br|3br|3bd|3 bd",title), "3br",
ifelse(grepl("4 bed|4bed|4 br|4br|4bd",title), "4br",
ifelse(grepl("5bed|5 bed|5 br|5br|5bd",title), "5br",bedrooms))))), bedrooms))
nrow(data2 %>% filter(.,bedrooms==""))
data2
data2 %>% filter(.,bedrooms=="", city == "New York") %>% select(.,title)
data2 %>% filter(.,bedrooms=="", city == "New York") %>% select(.,title)
data2 <- data %>%
mutate(.,bedrooms = ifelse(
bedrooms == "",
ifelse(grepl("studio||one bed|one bed|1bed|1 bed|1 br|1bd|1br|1 bd|1bd|",to_lower(title)), "1br",
ifelse(grepl("two bed|2bed|2 bed|2 br|2br|2 bd|2bd",to_lower(title)), "2br",
ifelse(grepl("3 bed|3bed|3 br|3br|3bd|3 bd",to_lower(title)), "3br",
ifelse(grepl("4 bed|4bed|4 br|4br|4bd",to_lower(title)), "4br",
ifelse(grepl("5bed|5 bed|5 br|5br|5bd",to_lower(title)), "5br",bedrooms))))), bedrooms))
data2 <- data %>%
mutate(.,bedrooms = ifelse(
bedrooms == "",
ifelse(grepl("studio||one bed|one bed|1bed|1 bed|1 br|1bd|1br|1 bd|1bd|",tolower(title)), "1br",
ifelse(grepl("two bed|2bed|2 bed|2 br|2br|2 bd|2bd",to_lower(title)), "2br",
ifelse(grepl("3 bed|3bed|3 br|3br|3bd|3 bd",to_lower(title)), "3br",
ifelse(grepl("4 bed|4bed|4 br|4br|4bd",to_lower(title)), "4br",
ifelse(grepl("5bed|5 bed|5 br|5br|5bd",to_lower(title)), "5br",bedrooms))))), bedrooms))
data2 <- data %>%
mutate(.,bedrooms = ifelse(bedrooms == "",
ifelse(grepl("studio||one bed|one bed|1bed|1 bed|1 br|1bd|1br|1 bd|1bd|",tolower(title)), "1br",
ifelse(grepl("two bed|2bed|2 bed|2 br|2br|2 bd|2bd",tolower(title)), "2br",
ifelse(grepl("3 bed|3bed|3 br|3br|3bd|3 bd",tolower(title)), "3br",
ifelse(grepl("4 bed|4bed|4 br|4br|4bd",tolower(title)), "4br",
ifelse(grepl("5bed|5 bed|5 br|5br|5bd",tolower(title)), "5br",bedrooms))))), bedrooms))
data2 <- data %>%
mutate(.,bedrooms = ifelse(bedrooms == "", ifelse(grepl("studio||one bed|one bed|1bed|1 bed|1 br|1bd|1br|1 bd|1bd|",tolower(title)), "1br",
ifelse(grepl("two bed|2bed|2 bed|2 br|2br|2 bd|2bd",tolower(title)), "2br",
ifelse(grepl("3 bed|3bed|3 br|3br|3bd|3 bd",tolower(title)), "3br",
ifelse(grepl("4 bed|4bed|4 br|4br|4bd",tolower(title)), "4br",
ifelse(grepl("5bed|5 bed|5 br|5br|5bd",tolower(title)), "5br",bedrooms))))), bedrooms))
nrow(data2 %>% filter(.,bedrooms==""))
data2 <- data %>% mutate(., title = tolower(title)) %>%
mutate(., bedrooms = ifelse(berooms!="",bedrooms,
ifelse(grepl("studio|1 bed|1bed|1br|1 br|1bd|1 bd|one bed|one bd|one br",title), "1br",
ifelse(grepl("2 bed|2bed|2br|2 br|2bd|2 bd|two bed|two bd|two br",title), "2br",
ifelse(grepl("3 bed|3bed|3br|3 br|3bd|3 bd|three bed|three bd|three br",title),"3br",
ifelse(grepl("4 bed|4bed|4br|4 br|4bd|4 bd",title), "4br",
ifelse(grepl("5 bed|5bed|5br|5 br|2bd|5 bd",title), "5br",bedroom)))))))
data2 <- data %>% mutate(., title = tolower(title)) %>%
mutate(., bedrooms = ifelse(bedrooms!="",bedrooms,
ifelse(grepl("studio|1 bed|1bed|1br|1 br|1bd|1 bd|one bed|one bd|one br",title), "1br",
ifelse(grepl("2 bed|2bed|2br|2 br|2bd|2 bd|two bed|two bd|two br",title), "2br",
ifelse(grepl("3 bed|3bed|3br|3 br|3bd|3 bd|three bed|three bd|three br",title),"3br",
ifelse(grepl("4 bed|4bed|4br|4 br|4bd|4 bd",title), "4br",
ifelse(grepl("5 bed|5bed|5br|5 br|2bd|5 bd",title), "5br",bedrooms)))))))
nrow(data2 %>% filter(.,bedrooms==""))
data2 %>% filter(.,bedrooms=="", city == "New York") %>% select(.,title)
data2 <- data %>% mutate(., title = tolower(title)) %>%
mutate(., bedrooms = ifelse(bedrooms!="",bedrooms,
ifelse(grepl("1-bed|one-bed|studio|1 bed|1bed|1br|1 br|1bd|1 bd|one bed|one bd|one br",title), "1br",
ifelse(grepl("2-bed|2-br|2 bed|2bed|2br|2 br|2bd|2 bd|two bed|two bd|two br",title), "2br",
ifelse(grepl("3 bed|3bed|3br|3 br|3bd|3 bd|three bed|three bd|three br",title),"3br",
ifelse(grepl("4 bed|4bed|4br|4 br|4bd|4 bd",title), "4br",
ifelse(grepl("5 bed|5bed|5br|5 br|2bd|5 bd",title), "5br",bedrooms)))))))
nrow(data2 %>% filter(.,bedrooms==""))
data2 %>% filter(.,bedrooms=="", city == "New York") %>% select(.,title)
nrow(data2 %>% filter(.,bedrooms==""))
data2 <- data %>% mutate(., title = tolower(title)) %>%
mutate(., bedrooms = ifelse(bedrooms!="",bedrooms,
ifelse(grepl("1.bed|one-bed|studio|1 bed|1bed|1br|1 br|1bd|1 bd|one bed|one bd|one br",title), "1br",
ifelse(grepl("2.bed|2-br|2 bed|2bed|2br|2 br|2bd|2 bd|two bed|two bd|two br",title), "2br",
ifelse(grepl("3.bed|3bed|3br|3 br|3bd|3 bd|three bed|three bd|three br",title),"3br",
ifelse(grepl("4.bed|4bed|4br|4 br|4bd|4 bd",title), "4br",
ifelse(grepl("5.bed|5bed|5br|5 br|2bd|5 bd",title), "5br",bedrooms)))))))
nrow(data2 %>% filter(.,bedrooms==""))
data2 <- data %>% mutate(., title = tolower(title)) %>%
mutate(., bedrooms = ifelse(bedrooms!="",bedrooms,
ifelse(grepl("1.bed|one.bed|studio|1 bed|1bed|1br|1.br|1bd|1.bd|one.bed|one.bd|one.br",title), "1br",
ifelse(grepl("2.bed|2.br|2 bed|2bed|2br|2.br|2bd|2.bd|two.bed|two.bd|two.br",title), "2br",
ifelse(grepl("3.bed|3bed|3br|3.br|3bd|3.bd|three.bed|three.bd|three.br",title),"3br",
ifelse(grepl("4.bed|4bed|4br|4.br|4bd|4.bd",title), "4br",
ifelse(grepl("5.bed|5bed|5br|5.br|2bd|5.bd",title), "5br",bedrooms)))))))
nrow(data2 %>% filter(.,bedrooms==""))
data2 %>% filter(.,bedrooms=="", city == "New York") %>% select(.,title)
data2 <- data %>% mutate(., title = tolower(title)) %>%
mutate(., bedrooms = ifelse(bedrooms!="",bedrooms,
ifelse(grepl("1bdrm|1.bdrm|one.bdrm|1.bed|one.bed|studio|1 bed|1bed|1br|1.br|1bd|1.bd|one.bed|one.bd|one.br",title), "1br",
ifelse(grepl("2.bdrm|2.bed|2.br|2 bed|2bed|2br|2.br|2bd|2.bd|two.bed|two.bd|two.br",title), "2br",
ifelse(grepl("3.bdrm|3.bed|3bed|3br|3.br|3bd|3.bd|three.bed|three.bd|three.br",title),"3br",
ifelse(grepl("4.bdrm|4.bed|4bed|4br|4.br|4bd|4.bd",title), "4br",
ifelse(grepl("5.bdrm|5.bed|5bed|5br|5.br|2bd|5.bd",title), "5br",bedrooms)))))))
nrow(data2 %>% filter(.,bedrooms==""))
data2 %>% filter(.,bedrooms=="", city == "San Francisco") %>% select(.,title)
data2 <- data %>% mutate(., title = tolower(title)) %>%
mutate(., bedrooms = ifelse(bedrooms!="",bedrooms,
ifelse(grepl("1/.|1x.|1bdrm|1.bdrm|one.bdrm|1.bed|one.bed|studio|1 bed|1bed|1br|1.br|1bd|1.bd|one.bed|one.bd|one.br",title), "1br",
ifelse(grepl("2/.|2x.|2.bdrm|2.bed|2.br|2 bed|2bed|2br|2.br|2bd|2.bd|two.bed|two.bd|two.br",title), "2br",
ifelse(grepl("3/.|3x.|3.bdrm|3.bed|3bed|3br|3.br|3bd|3.bd|three.bed|three.bd|three.br",title),"3br",
ifelse(grepl("4/.|4x.|4.bdrm|4.bed|4bed|4br|4.br|4bd|4.bd",title), "4br",
ifelse(grepl("5/.|5x.|5.bdrm|5.bed|5bed|5br|5.br|2bd|5.bd",title), "5br",bedrooms)))))))
nrow(data2 %>% filter(.,bedrooms==""))
data2 %>% filter(.,bedrooms=="", city == "San Francisco") %>% select(.,title)
data2 %>% filter(.,bedrooms=="", city == "Denver") %>% select(.,title)
data2 %>% filter(.,bedrooms=="", city == "Chicago") %>% select(.,title)
data2 %>% filter(.,bedrooms=="") %>% group_by(., city) %>% summarise(., count=n())
data2 <- data %>% mutate(., title = tolower(title)) %>%
mutate(., bedrooms = ifelse(bedrooms!="",bedrooms,
ifelse(grepl("1/.|1x.|1bdrm|1.bdrm|one.bdrm|1.bed|one.bed|studio|1 bed|1bed|1br|1.br|1bd|1.bd|one.bed|one.bd|one.br",title), "1br",
ifelse(grepl("2/.|2x.|2.bdrm|2.bed|2.br|2 bed|2bed|2br|2.br|2bd|2.bd|two.bed|two.bd|two.br",title), "2br",
ifelse(grepl("3/.|3x.|3.bdrm|3.bed|3bed|3br|3.br|3bd|3.bd|three.bed|three.bd|three.br",title),"3br",
ifelse(grepl("4/.|4x.|4.bdrm|4.bed|4bed|4br|4.br|4bd|4.bd",title), "4br",
ifelse(grepl("5/.|5x.|5.bdrm|5.bed|5bed|5br|5.br|2bd|5.bd",title), "5br",bedrooms)))))))
data2 %>% filter(.,bedrooms=="", city=="Dallas") %>% select(., title)
data2 <- data %>% mutate(., title = tolower(title)) %>%
mutate(., bedrooms = ifelse(bedrooms!="",bedrooms,
ifelse(grepl("1/.|1x.|1bdrm|1.bdrm|one.bdrm|1.bed|one.bed|studio|1 bed|1bed|1br|1.br|1bd|1.bd|one.bed|one.bd|one.br",title), "1br",
ifelse(grepl("2/.|2x.|2.bdrm|2.bed|2.br|2 bed|2bed|2br|2.br|2bd|2.bd|two.bed|two.bd|two.br",title), "2br",
ifelse(grepl("3/.|3x.|3.bdrm|3.bed|3bed|3br|3.br|3bd|3.bd|three.bed|three.bd|three.br",title),"3br",
ifelse(grepl("4/.|4x.|4.bdrm|4.bed|4bed|4br|4.br|4bd|4.bd",title), "4br",
ifelse(grepl("5/.|5x.|5.bdrm|5.bed|5bed|5br|5.br|2bd|5.bd",title), "5br",bedrooms))))))) %>%
filter(., city != "Dallas")
data2 <- data %>% mutate(., title = tolower(title)) %>%
mutate(., bedrooms = ifelse(bedrooms!="",bedrooms,
ifelse(grepl("1/.|1x.|1bdrm|1.bdrm|one.bdrm|1.bed|one.bed|studio|1 bed|1bed|1br|1.br|1bd|1.bd|one.bed|one.bd|one.br",title), "1br",
ifelse(grepl("2/.|2x.|2.bdrm|2.bed|2.br|2 bed|2bed|2br|2.br|2bd|2.bd|two.bed|two.bd|two.br",title), "2br",
ifelse(grepl("3/.|3x.|3.bdrm|3.bed|3bed|3br|3.br|3bd|3.bd|three.bed|three.bd|three.br",title),"3br",
ifelse(grepl("4/.|4x.|4.bdrm|4.bed|4bed|4br|4.br|4bd|4.bd",title), "4br",
ifelse(grepl("5/.|5x.|5.bdrm|5.bed|5bed|5br|5.br|2bd|5.bd",title), "5br",bedrooms))))))) %>%
filter(., city != "Dallas")
# which city has the highest average rent?
ggplot(data2 %>% group_by(., city) %>%
summarise(., price = round(mean(price))) %>%
arrange(.,desc(price)),
aes(city,price,label=paste0("$",price))) +
geom_col(aes(x=reorder(city,price)), fill = '#5815AD') +
geom_text(size = 3, color='white', position = position_stack(reverse = T,vjust = 0.5)) +
coord_flip() +
ggtitle("Average rental price for major cities") +
ylab("Average Price") +
ggsave("./ppt/price_by_city.png", width = 6, height = 4)
ggplot(data2 %>% filter(., bedrooms %in% c("1br")) %>%
group_by(., city) %>%
summarise(., price = round(mean(price))),
aes(city, price, label=paste0("$",price))) +
geom_col(aes(x=reorder(city, price)), fill = '#B696FF') +
geom_text(size = 3, position = position_stack(reverse = T,vjust = 0.5)) +
coord_flip() +
ggtitle("Average rental price (1 br)") +
ylab("Average Price") +
ggsave("./ppt/price_by_city_1br.png", width = 6, height = 4)
ggplot(data2 %>% filter(., bedrooms %in% c("2br","3br")) %>%
group_by(., city) %>%
summarise(., price = round(mean(price))),
aes(city, price, label=paste0("$",price))) +
geom_col(aes(x=reorder(city, price)), fill = '#B696FF') +
geom_text(size = 3, position = position_stack(reverse = T,vjust = 0.5)) +
coord_flip() +
ggtitle("Average rental price (2-3 br)") +
ylab("Average Price") +
ggsave("./ppt/price_by_city_2-3br.png", width = 6, height = 4)
ggplot(data2 %>% filter(., bedrooms %in% c("4br","5br","6br")) %>%
group_by(., city) %>%
summarise(., price = round(mean(price))),
aes(city, price, label=paste0("$",price))) +
geom_col(aes(x=reorder(city, price)), fill = '#B696FF') +
geom_text(size = 3, position = position_stack(reverse = T,vjust = 0.5)) +
coord_flip() +
ggtitle("Average rental price (4br and more)") +
ylab("Average Price") +
ggsave("./ppt/price_by_city_3-4br.png", width = 6, height = 4)
ggplot(data2 %>% filter(., bedrooms %in% c("4br","5br")) %>%
group_by(., city) %>%
summarise(., price = round(mean(price))),
aes(city, price, label=paste0("$",price))) +
geom_col(aes(x=reorder(city, price)), fill = '#B696FF') +
geom_text(size = 3, position = position_stack(reverse = T,vjust = 0.5)) +
coord_flip() +
ggtitle("Average rental price (4br and more)") +
ylab("Average Price") +
ggsave("./ppt/price_by_city_3-4br.png", width = 6, height = 4)
ggplot(data2 %>% filter(., bedrooms %in% c("4br","5br","6br")) %>%
group_by(., city) %>%
summarise(., price = round(mean(price))),
aes(city, price, label=paste0("$",price))) +
geom_col(aes(x=reorder(city, price)), fill = '#B696FF') +
geom_text(size = 3, position = position_stack(reverse = T,vjust = 0.5)) +
coord_flip() +
ggtitle("Average rental price (4br and more)") +
ylab("Average Price") +
ggsave("./ppt/price_by_city_3-4br.png", width = 6, height = 4)
# which city is the most dog friendly? most cat friendly?
pet_friendly <- data %>% group_by(., city) %>% summarise(., dogs_ok = sum(dogs_allowed), cats_ok = sum(cats_allowed)) %>%
left_join(.,data %>% group_by(., city) %>% summarise(., total_listing=n()), by = 'city') %>%
mutate(., cat_friendly = round(cats_ok/total_listing*100,2),
dog_friendly = round(dogs_ok/total_listing*100,2))
ggplot(pet_friendly %>% gather(.,key=key,value=value,c('cat_friendly','dog_friendly')), aes(x=city,y=value,label=paste0(value,'%'))) +
coord_flip() +
geom_col(aes(x=reorder(city, value)), fill='#5815AD') +
geom_text(size = 3, color='#FCFBFF',position = position_stack(reverse = T,vjust = 0.5)) +
facet_wrap(~key, scales = "free")+
ggtitle("Pet Friendliness") +
ylab("pet allowed listings / total listings (%)") +
ggsave("./ppt/price_by_city_pet_friendly.png", width = 8, height = 6)
# which city is the most dog friendly? most cat friendly?
pet_friendly <- data %>% group_by(., city) %>% summarise(., dogs_ok = sum(dogs_allowed), cats_ok = sum(cats_allowed)) %>%
left_join(.,data %>% group_by(., city) %>% summarise(., total_listing=n()), by = 'city') %>%
mutate(., cat_friendly = round(cats_ok/total_listing*100,2),
dog_friendly = round(dogs_ok/total_listing*100,2))
ggplot(pet_friendly %>% gather(.,key=key,value=value,c('cat_friendly','dog_friendly')), aes(x=city,y=value,label=paste0(value,'%'))) +
coord_flip() +
geom_col(aes(x=reorder(city, value)), fill='#5815AD') +
geom_text(size = 3, color='#FCFBFF',position = position_stack(reverse = T,vjust = 0.5)) +
facet_wrap(~key, scales = "free")+
ggtitle("Pet Friendliness") +
ylab("pet allowed listings / total listings (%)") +
ggsave("./ppt/price_by_city_pet_friendly.png", width = 8, height = 6)
# Is average listing price tend to be higher due to the pet?
data %>% group_by(.,dogs_allowed) %>% summarise(., round(mean(price)))
data %>% group_by(.,cats_allowed) %>% summarise(., round(mean(price)))
# Is average listing price tend to be higher due to the pet?
data2 %>% group_by(.,dogs_allowed) %>% summarise(., round(mean(price)))
data2 %>% group_by(.,cats_allowed) %>% summarise(., round(mean(price)))
# which day do people post most listings (by city)
weekday <- data %>% mutate(.,weekday = weekdays(as.Date(date))) %>%
group_by(., weekday) %>% summarise(., perc=round(n()/nrow(data)*100)) %>%
select(.,weekday, perc) %>% mutate(.,weekday=factor(weekday, levels=c("Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday"),
ordered = T))
plot(gvisPieChart(weekday[order(weekday$weekday),], options=list(width=1000, height=600)))
# which day do people post most listings (by city)
weekday <- data2 %>% mutate(.,weekday = weekdays(as.Date(date))) %>%
group_by(., weekday) %>% summarise(., perc=round(n()/nrow(data)*100)) %>%
select(.,weekday, perc) %>% mutate(.,weekday=factor(weekday, levels=c("Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday"),
ordered = T))
plot(gvisPieChart(weekday[order(weekday$weekday),], options=list(width=1000, height=600)))
# NYC which day has the most postings? what time frame?
nyc_weekday <- data2 %>% mutate(.,weekday = weekdays(as.Date(date))) %>% filter(., city=="New York") %>%
group_by(., weekday) %>% summarise(., perc=round(n()/nrow(data)*100)) %>%
select(.,weekday, perc) %>% mutate(.,weekday=factor(weekday, levels=c("Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday"),
ordered = T))
plot(gvisPieChart(nyc_weekday[order(nyc_weekday$weekday),], options=list(width=1000, height=600)))
# NYC which day has the most postings? what time frame?
nyc_weekday <- data %>% mutate(.,weekday = weekdays(as.Date(date))) %>% filter(., city=="New York") %>%
group_by(., weekday) %>% summarise(., perc=round(n()/nrow(data %>% filter(., city=="New York"))*100)) %>%
select(.,weekday, perc) %>% mutate(.,weekday=factor(weekday, levels=c("Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday"),
ordered = T))
plot(gvisPieChart(nyc_weekday[order(nyc_weekday$weekday),], options=list(width=1000, height=600)))
# NYC which day has the most postings? what time frame?
nyc_weekday <- data %>% mutate(.,weekday = weekdays(as.Date(date))) %>% filter(., city=="New York") %>%
group_by(., weekday) %>% summarise(., perc=round(n()/nrow(data %>% filter(., city=="New York"))*100)) %>%
select(.,weekday, perc) %>% mutate(.,weekday=factor(weekday, levels=c("Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday"),
ordered = T))
nrow(data2 %>% filter(.,bedrooms=="", city=="Seattle") #Dallas, Seattle  Los AngelesSan Francisco
data2 %>% filter(.,bedrooms=="", city=="Seattle")
P <- gvisPieChart(time_range[order(time_range$time_range),],
options=list(
width=1000,
height=600,
colors={"['#D6C3FA','#5815AD','#7E3FCE']"},
title={"Percentage of Listings by hour"}))
plot(P)
P <- gvisPieChart(time_range[order(time_range$time_range),],
options=list(
width=1000,
height=600,
colors={"['#D9CCFF','#5815AD','#A180FA']"},
title={"Percentage of Listings by hour"}))
plot(P)
P <- gvisPieChart(time_range[order(time_range$time_range),],
options=list(
width=1000,
height=600,
colors={"['#D9CCFF','#5815AD','#A180FA']"}
))
plot(P)
plot(gvisPieChart(nyc_weekday[order(nyc_weekday$weekday),], options=list(width=1000, height=600)))
time_range <- data %>% filter(., city=="New York") %>% group_by(., time_range) %>% summarise(.,perc=round(n()/nrow(data)*100)) %>%
select(.,time_range,perc) %>% mutate(.,time_range=factor(time_range, levels=c("12AM~8AM","8AM~4PM","4PM~12AM")))
ggplot(time_range[order(time_range$time_range),]) +
geom_col(aes(x=reorder(time_range,desc(perc)),y=perc), fill=c("#5815AD","#A180FA","#D9CCFF")) +
geom_text(aes(x = time_range,y = perc + 2, label=paste0(perc,'%')), size = 4) +
xlab("Time Range") +
ylab("Percentage of total listings") +
ggsave("./ppt/time_range1.png", width = 6, height = 4)
ggplot(time_range[order(time_range$time_range),]) +
geom_col(aes(x=reorder(time_range,desc(perc)),y=perc), fill=c("#5815AD","#A180FA","#D9CCFF")) +
geom_text(aes(x = time_range,y = perc + 0.1, label=paste0(perc,'%')), size = 4) +
xlab("Time Range") +
ylab("Percentage of total listings") +
ggsave("./ppt/time_range1.png", width = 6, height = 4)
ggplot(time_range[order(time_range$time_range),]) +
geom_col(aes(x=reorder(time_range,desc(perc)),y=perc), fill=c("#5815AD","#A180FA","#D9CCFF")) +
geom_text(aes(x = time_range,y = perc + 0.3, label=paste0(perc,'%')), size = 4) +
xlab("Time Range") +
ylab("Percentage of total listings") +
ggsave("./ppt/time_range1.png", width = 6, height = 4)
ggplot(time_range[order(time_range$time_range),]) +
geom_col(aes(x=reorder(time_range,desc(perc)),y=perc), fill=c("#5815AD","#A180FA","#D9CCFF")) +
geom_text(aes(x = time_range,y = perc + 0.2, label=paste0(perc,'%')), size = 4) +
xlab("Time Range") +
ylab("Percentage of total listings") +
ggsave("./ppt/time_range1.png", width = 6, height = 4)
ggplot(time_range[order(time_range$time_range),]) +
geom_col(aes(x=reorder(time_range,desc(perc)),y=perc), fill=c("#5815AD","#A180FA","#D9CCFF")) +
geom_text(aes(x = time_range,y = perc + 2, label=paste0(perc,'%')), size = 4) +
xlab("Time Range") +
ylab("Percentage of total listings") +
ggsave("./ppt/time_range1.png", width = 6, height = 4)
# what time of the day people post most listings?
time_range <- data %>% group_by(., time_range) %>% summarise(.,perc=round(n()/nrow(data)*100)) %>%
select(.,time_range,perc) %>% mutate(.,time_range=factor(time_range, levels=c("12AM~8AM","8AM~4PM","4PM~12AM")))
ggplot(time_range[order(time_range$time_range),]) +
geom_col(aes(x=reorder(time_range,desc(perc)),y=perc), fill=c("#5815AD","#A180FA","#D9CCFF")) +
geom_text(aes(x = time_range,y = perc + 2, label=paste0(perc,'%')), size = 4) +
xlab("Time Range") +
ylab("Percentage of total listings") +
ggsave("./ppt/time_range1.png", width = 6, height = 4)
ggplot(time_range[order(time_range$time_range),]) +
geom_col(aes(x=reorder(time_range,desc(perc)),y=perc), fill=c("#5815AD","#A180FA","#D9CCFF")) +
geom_text(aes(x = time_range,y = perc + 0.2, label=paste0(perc,'%')), size = 4) +
xlab("Time Range") +
ylab("Percentage of total listings") +
ggsave("./ppt/NYC_time_range1.png", width = 6, height = 4)
time_range <- data %>% filter(., city=="New York") %>% group_by(., time_range) %>% summarise(.,perc=round(n()/nrow(data)*100)) %>%
select(.,time_range,perc) %>% mutate(.,time_range=factor(time_range, levels=c("12AM~8AM","8AM~4PM","4PM~12AM")))
ggplot(time_range[order(time_range$time_range),]) +
geom_col(aes(x=reorder(time_range,desc(perc)),y=perc), fill=c("#5815AD","#A180FA","#D9CCFF")) +
geom_text(aes(x = time_range,y = perc + 0.2, label=paste0(perc,'%')), size = 4) +
xlab("Time Range") +
ylab("Percentage of total listings") +
ggsave("./ppt/NYC_time_range1.png", width = 6, height = 4)
ggplot(nyc_time_range[order(nyc_time_range$time_range),]) +
geom_col(aes(x=reorder(time_range,desc(perc)),y=perc), fill=c("#5815AD","#A180FA","#D9CCFF")) +
geom_text(aes(x = time_range,y = perc + 0.2, label=paste0(perc,'%')), size = 4) +
xlab("Time Range") +
ylab("Percentage of total listings") +
ggsave("./ppt/NYC_time_range1.png", width = 6, height = 4)
nyc_time_range <- data %>% filter(., city=="New York") %>% group_by(., time_range) %>% summarise(.,perc=round(n()/nrow(data)*100)) %>%
select(.,time_range,perc) %>% mutate(.,time_range=factor(time_range, levels=c("12AM~8AM","8AM~4PM","4PM~12AM")))
ggplot(nyc_time_range[order(nyc_time_range$time_range),]) +
geom_col(aes(x=reorder(time_range,desc(perc)),y=perc), fill=c("#5815AD","#A180FA","#D9CCFF")) +
geom_text(aes(x = time_range,y = perc + 0.2, label=paste0(perc,'%')), size = 4) +
xlab("Time Range") +
ylab("Percentage of total listings") +
ggsave("./ppt/NYC_time_range1.png", width = 6, height = 4)
nyc_time_range <- data %>% filter(., city=="New York") %>% group_by(., time_range) %>%
summarise(.,perc=round(n()/nrow(data %>% filter(., city=="New York"))*100)) %>%
select(.,time_range,perc) %>% mutate(.,time_range=factor(time_range, levels=c("12AM~8AM","8AM~4PM","4PM~12AM")))
ggplot(nyc_time_range[order(nyc_time_range$time_range),]) +
geom_col(aes(x=reorder(time_range,desc(perc)),y=perc), fill=c("#5815AD","#A180FA","#D9CCFF")) +
geom_text(aes(x = time_range,y = perc + 0.2, label=paste0(perc,'%')), size = 4) +
xlab("Time Range") +
ylab("Percentage of total listings") +
ggsave("./ppt/NYC_time_range1.png", width = 6, height = 4)
ggplot(nyc_time_range[order(nyc_time_range$time_range),]) +
geom_col(aes(x=reorder(time_range,desc(perc)),y=perc), fill=c("#5815AD","#A180FA","#D9CCFF")) +
geom_text(aes(x = time_range,y = perc + 0.9, label=paste0(perc,'%')), size = 4) +
xlab("Time Range") +
ylab("Percentage of total listings") +
ggsave("./ppt/NYC_time_range1.png", width = 6, height = 4)
ggplot(nyc_time_range[order(nyc_time_range$time_range),]) +
geom_col(aes(x=reorder(time_range,desc(perc)),y=perc), fill=c("#5815AD","#A180FA","#D9CCFF")) +
geom_text(aes(x = time_range,y = perc + 2, label=paste0(perc,'%')), size = 4) +
xlab("Time Range") +
ylab("Percentage of total listings") +
ggsave("./ppt/NYC_time_range1.png", width = 6, height = 4)
nyc_time_range2 <- data %>% filter(., city=="New York") %>% mutate(., time_range2 = ifelse(as.integer(substr(time,1,2))>=8 & as.integer(substr(time,1,2))<=11,"8AM~12PM",
ifelse(as.integer(substr(time,1,2))>=12 & as.integer(substr(time,1,2))<=15,"12AM~4PM",
ifelse(as.integer(substr(time,1,2))>=16 & as.integer(substr(time,1,2))<=19,"4PM~8PM", "8PM~8AM")))) %>%
ggplot(nyc_time_range[order(nyc_time_range$time_range),]) +
geom_col(aes(x=reorder(time_range,desc(perc)),y=perc), fill=c("#5815AD","#A180FA","#D9CCFF")) +
geom_text(aes(x = time_range,y = perc + 2, label=paste0(perc,'%')), size = 4) +
xlab("Time Range") +
ylab("Percentage of total listings") +
ggsave("./ppt/NYC_time_range1.png", width = 6, height = 4)
nyc_time_range2 <- data %>% filter(., city=="New York") %>% mutate(., time_range2 = ifelse(as.integer(substr(time,1,2))>=8 & as.integer(substr(time,1,2))<=11,"8AM~12PM",
ifelse(as.integer(substr(time,1,2))>=12 & as.integer(substr(time,1,2))<=15,"12PM~4PM",
ifelse(as.integer(substr(time,1,2))>=16 & as.integer(substr(time,1,2))<=19,"4PM~8PM",
ifelse(as.integer(substr(time,1,2))>=20 & as.integer(substr(time,1,2))<=23,"8PM~12AM","12AM~8AM"))))) %>%
group_by(., time_range2) %>% summarise(., perc = round(n()/nrow(data %>% filter(., city=="New York"))*100)) %>%
select(.,time_range2,perc) %>% mutate(.,time_range2=factor(time_range2, levels=c("8AM~12PM","12PM~4PM","4PM~8PM","8PM~12AM","12AM~8AM")))
nyc_time_range2 <- data %>% filter(., city=="New York") %>% mutate(., time_range2 = ifelse(as.integer(substr(time,1,2))>=8 & as.integer(substr(time,1,2))<=11,"8AM~12PM",
ifelse(as.integer(substr(time,1,2))>=12 & as.integer(substr(time,1,2))<=15,"12PM~4PM",
ifelse(as.integer(substr(time,1,2))>=16 & as.integer(substr(time,1,2))<=19,"4PM~8PM",
ifelse(as.integer(substr(time,1,2))>=20 & as.integer(substr(time,1,2))<=23,"8PM~12AM","12AM~8AM"))))) %>%
group_by(., time_range2) %>% summarise(., perc = round(n()/nrow(data %>% filter(., city=="New York"))*100)) %>%
select(.,time_range2,perc) %>% mutate(.,time_range2=factor(time_range2, levels=c("8AM~12PM","12PM~4PM","4PM~8PM","8PM~12AM","12AM~8AM")))
P <- gvisPieChart(nyc_time_range2[order(nyc_time_range2$time_range2),],
options=list(
width=1000,
height=600,
colors={"[''#D6C3FA','#5815AD','#7E3FCE','#AD8AEA','#A180FA']"}
))
plot(P)
nyc_time_range2[order(nyc_time_range2$time_range2),]
P <- gvisPieChart(nyc_time_range2[order(nyc_time_range2$time_range2),],
options=list(
width=1000,
height=600,
colors={"[''#D6C3FA','#5815AD','#7E3FCE','#AD8AEA','#A180FA']"}
))
plot(P)
P <- gvisPieChart(nyc_time_range2[order(nyc_time_range2$time_range2),],
options=list(
width=1000,
height=600#,
#colors={"[''#D6C3FA','#5815AD','#7E3FCE','#AD8AEA','#A180FA']"}
))
plot(P)
P <- gvisPieChart(nyc_time_range2[order(nyc_time_range2$time_range2),],
options=list(
width=1000,
height=600,
colors={"['#D6C3FA','#5815AD','#7E3FCE','#AD8AEA','#A180FA']"}
))
plot(P)
P <- gvisPieChart(nyc_time_range2[order(nyc_time_range2$time_range2),],
options=list(
width=1000,
height=600,
colors={"['#7E3FCE','#5815AD','#A180FA','#AD8AEA','#D6C3FA']"}
))
plot(P)
P <- gvisPieChart(nyc_time_range2[order(nyc_time_range2$time_range2),],
options=list(
width=1000,
height=600,
colors={"['#7E3FCE','#5815AD','#906FF2','#B59CFF','#D2C2FF']"}
))
plot(P)
plot(gvisPieChart(nyc_weekday[order(nyc_weekday$weekday),],
options=list(width=1000, height=600,
colors={"['#A88FEF','#906FF2','#5815AD','#7E3FCE','#A88FEF','#D2C2FF','#B098F2']"})))
plot(gvisPieChart(nyc_weekday[order(nyc_weekday$weekday),],
options=list(width=1000, height=600,
colors={"['#906FF2','#A88FEF','#5815AD','#7E3FCE','#A88FEF','#D2C2FF','#B098F2']"})))
plot(gvisPieChart(nyc_weekday[order(nyc_weekday$weekday),],
options=list(width=1000, height=600,
colors={"['#906FF2','#7E3FCE','#5815AD','#906FF2','#A88FEF','#D2C2FF','#B098F2']"})))
plot(gvisPieChart(nyc_weekday[order(nyc_weekday$weekday),],
options=list(width=1000, height=600,
colors={"['#906FF2','#7E3FCE','#5815AD','#906FF2','#8D6CE8','#D2C2FF','#B098F2']"})))
plot(gvisPieChart(nyc_weekday[order(nyc_weekday$weekday),],
options=list(width=1000, height=600,
colors={"['#906FF2','#7E3FCE','#5815AD','#5815AD','#906FF2','#D2C2FF','#D2C2FF']"})))
plot(gvisPieChart(nyc_weekday[order(nyc_weekday$weekday),],
options=list(width=1000, height=600,
colors={"['#906FF2','#7E3FCE','#5815AD','#5815AD','#906FF2','#C2ACFC','#D2C2FF']"})))
plot(gvisPieChart(nyc_weekday[order(nyc_weekday$weekday),],
options=list(width=1000, height=600,
colors={"['#906FF2','#6E48D2','#5815AD','#5815AD','#906FF2','#C2ACFC','#D2C2FF']"})))
plot(gvisPieChart(nyc_weekday[order(nyc_weekday$weekday),],
options=list(width=1000, height=600,
colors={"['#906FF2','#6841CF','#5815AD','#5815AD','#906FF2','#C2ACFC','#D2C2FF']"})))
ggplot(pet_friendly %>% gather(.,key=key,value=value,c('cat_friendly','dog_friendly')), aes(x=city,y=value,label=paste0(value,'%'))) +
coord_flip() +
geom_col(aes(x=reorder(city, value)), fill='#5815AD') +
geom_text(size = 3, color='#FCFBFF',position = position_stack(reverse = T,vjust = 0.5)) +
facet_wrap(~key, scales = "free")+
ggtitle("Pet Friendliness") +
ylab("pet allowed listings / total listings (%)") +
ggsave("./ppt/price_by_city_pet_friendly.png", width = 8, height = 6)
plot(gvisPieChart(nyc_weekday[order(nyc_weekday$weekday),],
options=list(width=1000, height=600,
colors={"['#906FF2','#7E3FCE','#5815AD','#5815AD','#906FF2','#C2ACFC','#D2C2FF']"})))
plot(gvisPieChart(nyc_weekday[order(nyc_weekday$weekday),],
options=list(width=1000, height=600,
colors={"['#906FF2','#7E3FCE','#5815AD','#5815AD','#906FF2','#C2ACFC','#D2C2FF']"})))
